{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Storefront",
    "description": "Storefront API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer Token"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Users API"
    },
    {
      "name": "Products",
      "description": "Products API"
    },
    {
      "name": "Orders",
      "description": "Orders API"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all Products",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Product Category",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Most Popular",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create Product",
        "requestBody": {
          "description": "Product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all Users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new User",
        "requestBody": {
          "description": "User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a Product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of product that we want to find"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/orders/{userId}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new Order",
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user whose order we want to create"
          }
        ]
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all Orders",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user whose orders we want to find"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Status of order that we want to find"
          }
        ]
      }
    },
    "/orders/{userId}/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get a single customer order",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user whose order we want to find"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of order that we want to find"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update a single order for a customer",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user whose order we want to find"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of order that we want to find"
          }
        ],
        "requestBody": {
          "description": "Order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateOrder"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UpdateOrder": {
      "properties": {
        "order": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "completed",
                "open"
              ]
            }
          }
        }
      }
    },
    "NewUser": {
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        }
      }
    },
    "User": {
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "NewOrder": {
      "properties": {
        "order": {
          "type": "object",
          "properties": {
            "orderItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "Product": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of Product"
        },
        "name": {
          "type": "string",
          "description": "Name of Product"
        },
        "price": {
          "type": "number",
          "description": "Price of Product"
        },
        "category": {
          "type": "string",
          "description": "Category of Product"
        }
      }
    },
    "NewProduct": {
      "properties": {
        "product": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of Product"
            },
            "price": {
              "type": "number",
              "description": "Price of Product"
            },
            "category": {
              "type": "string",
              "description": "Category of Product"
            }
          }
        }
      }
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "ID of Product"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of Product"
        }
      }
    },
    "Products": {
      "type": "array",
      "$ref": "#/definitions/Product"
    },
    "Order": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of Order"
        },
        "userId": {
          "type": "integer",
          "description": "ID of User"
        },
        "productId": {
          "type": "integer",
          "description": "ID of Product"
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity of Product"
        },
        "price": {
          "type": "number",
          "description": "Price of Product"
        }
      }
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "BasicAuth": []
    },
    {
      "Bearer": []
    }
  ]
}